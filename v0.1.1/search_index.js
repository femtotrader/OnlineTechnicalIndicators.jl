var documenterSearchIndex = {"docs":
[{"location":"indicators_support/#Indicators-support","page":"Indicators support","title":"Indicators support","text":"","category":"section"},{"location":"indicators_support/","page":"Indicators support","title":"Indicators support","text":"Name Description Input Output Dependencies Implementation status\nAccuDist Accumulation and Distribution 🕯️ 🔢 - ✔️\nADX Average Directional Index 🕯️ Ⓜ️ ATR ✔️\nALMA Arnaud Legoux Moving Average 🔢 🔢 CircBuff ✔️\nAO Awesome Oscillator 🕯️ 🔢 SMA ✔️\nAroon Aroon Up/Down 🕯️ Ⓜ️ CircBuff ✔️\nATR Average True Range 🕯️ 🔢 TrueRange, SMMA ✔️\nBB Bollinger Bands 🔢 Ⓜ️ SMA, StdDev ✔️\nBOP Balance Of Power 🕯️ 🔢 - ✔️\nCCI Commodity Channel Index 🕯️ 🔢 MeanDev ✔️\nChaikinOsc Chaikin Oscillator 🕯️ 🔢 AccuDist, EMA ✔️\nChandeKrollStop Chande Kroll Stop 🕯️ Ⓜ️ CircBuff, ATR ✔️\nCHOP Choppiness Index 🕯️ 🔢 CircBuff, ATR ✔️\nCoppockCurve Coppock Curve 🔢 🔢 ROC, WMA ✔️\nDEMA Double Exponential Moving Average 🔢 🔢 EMA ✔️\nDonchianChannels Donchian Channels 🕯️ Ⓜ️ CircBuff ✔️\nDPO Detrended Price Oscillator 🔢 🔢 CircBuff, SMA ✔️\nEMA Exponential Moving Average 🔢 🔢 CircBuff ✔️\nEMV Ease of Movement 🕯️ 🔢 CircBuff, SMA ✔️\nFibRetracement Fibonacci Retracement ❓ ❓  Simple class with standard Fibonacci levels (0.236, 0.382, 0.5, 0.618, 0.786)\nForceIndex Force Index 🕯️ 🔢 prev input val, EMA ✔️\nHMA Hull Moving Average 🔢 🔢 WMA ✔️\nIchimoku Ichimoku Clouds 🔢 Ⓜ️ CircBuff 5 managed sequences (unit tests not available in reference implementation)\nKAMA Kaufman's Adaptive Moving Average 🔢 🔢 CircBuff ✔️\nKeltnerChannels Keltner Channels 🕯️ Ⓜ️ ATR, EMA with input_modifier to extract close value of a candle ✔️\nKST Know Sure Thing 🔢 Ⓜ️ ROC, SMA ✔️\nKVO Klinger Volume Oscillator 🕯️ 🔢 EMA ✔️\nMACD Moving Average Convergence Divergence 🔢 Ⓜ️ EMA ✔️\nMassIndex Mass Index 🕯️ 🔢 EMA, CircBuff ✔️\nMcGinleyDynamic McGinley Dynamic 🔢 🔢 CircBuff ✔️\nMeanDev Mean Deviation 🔢 🔢 CircBuff, SMA ✔️\nNATR Normalized Average True Range 🕯️ 🔢 ATR ✔️\nOBV On Balance Volume 🕯️ 🔢 prev input val ✔️\nParabolicSAR Parabolic Stop And Reverse 🕯️ Ⓜ️ CircBuff ✔️\nPivotsHL High/Low Pivots 🕯️ Ⓜ️ - ✔️ (unit tests missing in reference implementation)\nROC Rate Of Change 🔢 🔢 CircBuff ✔️\nRSI Relative Strength Index 🔢 🔢 CircBuff, SMMA ✔️\nSFX SFX 🕯️ Ⓜ️ ATR, StdDev, SMA and input_modifier (to extract close) ✔️\nSMA Simple Moving Average 🔢 🔢 CircBuff ✔️\nSMMA Smoothed Moving Average 🔢 🔢 CircBuff ✔️\nSOBV Smoothed On Balance Volume 🕯️ 🔢 OBV, SMA ✔️\nSTC Schaff Trend Cycle 🔢 🔢 MACD, Stoch with input_modifier (MACDVal->OHLCV and stoch_d->OHLCV), indicator chaining, MAFactory (default SMA) ✔️\nStdDev Standard Deviation 🔢 🔢 CircBuff ✔️\nStoch Stochastic 🕯️ Ⓜ️ CircBuff, SMA ✔️ 🎄\nStochRSI Stochastic RSI 🔢 Ⓜ️ RSI, SMA ✔️\nSuperTrend Super Trend 🕯️ Ⓜ️ CircBuff, ATR ✔️\nT3 T3 Moving Average 🔢 🔢 EMA with indicator chaining and input filter ✔️\nTEMA Triple Exponential Moving Average 🔢 🔢 EMA ✔️\nTRIX TRIX 🕯️ Ⓜ️ EMA, indicator chaining ✔️\nTrueRange True Range 🕯️ 🔢 CircBuff ✔️\nTSI True Strength Index 🔢 🔢 EMA, indicator chaining ✔️\nTTM TTM Squeeze 🕯️ Ⓜ️ SMA, BB, DonchianChannels, KeltnerChannels and input_modifier to extract close value of a candle ✔️\nUO Ultimate Oscillator 🕯️ 🔢 CircBuff ✔️\nVTX Vortex Indicator 🕯️ Ⓜ️ CircBuff, ATR ✔️\nVWAP Volume Weighted Average Price 🕯️ 🔢 - ✔️\nVWMA Volume Weighted Moving Average 🕯️ 🔢 CircBuff ✔️\nWMA Weighted Moving Average 🔢 🔢 CircBuff ✔️\nZLEMA Zero Lag Exponential Moving Average 🔢 🔢 EMA ✔️","category":"page"},{"location":"indicators_support/#Legend","page":"Indicators support","title":"Legend","text":"","category":"section"},{"location":"indicators_support/","page":"Indicators support","title":"Indicators support","text":"🔢 single number (input or output)","category":"page"},{"location":"indicators_support/","page":"Indicators support","title":"Indicators support","text":"Ⓜ️ multiple numbers (output)","category":"page"},{"location":"indicators_support/","page":"Indicators support","title":"Indicators support","text":"🕯️ OHLCV candlestick input","category":"page"},{"location":"indicators_support/#Indicators-implementation-category","page":"Indicators support","title":"Indicators implementation category","text":"","category":"section"},{"location":"indicators_support/","page":"Indicators support","title":"Indicators support","text":"🔢 🔢 SISO indicators","category":"page"},{"location":"indicators_support/","page":"Indicators support","title":"Indicators support","text":"🔢 Ⓜ️ SIMO indicators","category":"page"},{"location":"indicators_support/","page":"Indicators support","title":"Indicators support","text":"🕯️ 🔢 MISO indicators","category":"page"},{"location":"indicators_support/","page":"Indicators support","title":"Indicators support","text":"🕯️ Ⓜ️ MIMO indicators","category":"page"},{"location":"indicators_support/","page":"Indicators support","title":"Indicators support","text":"Indicators can be of 1 out of 4 categories given their input/output behavior : SISO, SIMO, MISO and MIMO.","category":"page"},{"location":"install/#Install","page":"Install","title":"Install","text":"","category":"section"},{"location":"install/","page":"Install","title":"Install","text":"Open Julia command line interface. ","category":"page"},{"location":"install/","page":"Install","title":"Install","text":"Type ] dev https://github.com/femtotrader/OnlineTechnicalIndicators.jl/","category":"page"},{"location":"features/#Package-Features","page":"Package Features","title":"Package Features","text":"","category":"section"},{"location":"features/","page":"Package Features","title":"Package Features","text":"Input new data (one observation at a time) to indicator with fit! function (from OnlineStats.jl)\nInput data which inherits AbstractVector\nInput data as compatible Tables.jl format\nSub-indicators\nIndicators chaining\nFilter/transform input of indicator","category":"page"},{"location":"implementing_your_indic/#Implementing-your-own-indicator","page":"Implementing your own indicator","title":"Implementing your own indicator","text":"","category":"section"},{"location":"implementing_your_indic/#Categorization-of-your-indicator","page":"Implementing your own indicator","title":"Categorization of your indicator","text":"","category":"section"},{"location":"implementing_your_indic/","page":"Implementing your own indicator","title":"Implementing your own indicator","text":"Categorization of indicators is done to better understand implementation of indicators, not to understand the role of each indicator. To better understand the role of each indicator other categories such as moving averages, momentum indicators, volatility indicators are better suited.","category":"page"},{"location":"implementing_your_indic/#SISO-indicators-(-)","page":"Implementing your own indicator","title":"SISO indicators (🔢 🔢)","text":"","category":"section"},{"location":"implementing_your_indic/","page":"Implementing your own indicator","title":"Implementing your own indicator","text":"A SISO indicator takes one simple observation (price of an asset, volume of assets traded...) and output just one value for this observation.","category":"page"},{"location":"implementing_your_indic/","page":"Implementing your own indicator","title":"Implementing your own indicator","text":"SMA, EMA are good examples of such indicator category (but also most of others moving average indicators).","category":"page"},{"location":"implementing_your_indic/#SIMO-indicators-(-)","page":"Implementing your own indicator","title":"SIMO indicators (🔢 Ⓜ️)","text":"","category":"section"},{"location":"implementing_your_indic/","page":"Implementing your own indicator","title":"Implementing your own indicator","text":"The very famous BB (Bollinger Bands developed by financial analyst John Bollinger) indicator is an example of SIMO indicator. Like a SISO indicator it takes one simple value at a time. But contrary to SISO indicator, SIMO indicators generate several values at a time (upper band, central value, lower band in the case of Bollinger Bands indicator).","category":"page"},{"location":"implementing_your_indic/#MISO-indicators-(-)","page":"Implementing your own indicator","title":"MISO indicators (🕯️ 🔢)","text":"","category":"section"},{"location":"implementing_your_indic/","page":"Implementing your own indicator","title":"Implementing your own indicator","text":"OnlineTechnicalIndicators have also some MISO indicators ie indicators which takes several values at a time. It can be candlestick OHLCV data for example. Average True Range (ATR) is an example of such an indicator. It's the average of true ranges over the specified period. ATR measures volatility, taking into account any gaps in the price movement. It was developed by a very prolific author named J. Welles Wilder (also author of RSI, ParabolicSAR and ADX).","category":"page"},{"location":"implementing_your_indic/#MIMO-indicators-(-)","page":"Implementing your own indicator","title":"MIMO indicators (🕯️ Ⓜ️)","text":"","category":"section"},{"location":"implementing_your_indic/","page":"Implementing your own indicator","title":"Implementing your own indicator","text":"The last implementation type of indicator are MIMO indicators ie indicator which take several values at a time (such a candlestick data) and ouput several values at a time. Stochastic oscillator (Stoch also known as KD indicator) is an example of such indicator implementation category). It was developed in the late 1950s by a technical analyst named Georges Lane. This method attempts to predict price turning points by comparing the closing price of a security to its price range. Such indicator ouputs 2 values at a time : k and d.","category":"page"},{"location":"implementing_your_indic/#Steps-to-implement-your-own-indicator","page":"Implementing your own indicator","title":"Steps to implement your own indicator","text":"","category":"section"},{"location":"implementing_your_indic/","page":"Implementing your own indicator","title":"Implementing your own indicator","text":"First step to implement your own indicator is to categorized it in the SISO, SIMO, MISO, MIMO category.\nLook at indicator dependencies and try to find out an existing indicator of similar category with similar features used.\nWatch existing code of an indicator of a similar category with quite similar dependencies.\nCopy file into src\\indicators directory with same name for struct and filename (that's important for tests)\nIncrement number of indicators in test_indicators_interface.jl\n@test length(files) == ...  # number of indicators\nCreate unit tests (in the correct category) and ensure they are passing.","category":"page"},{"location":"internals/#OnlineTechnicalIndicators-internals","page":"Internals","title":"OnlineTechnicalIndicators internals","text":"","category":"section"},{"location":"internals/#Sub-indicator(s)","page":"Internals","title":"Sub-indicator(s)","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"An indicator can be composed internally of sub-indicator(s). Input values catched by fit! calls are transmitted to each sub_indicators to be processed to _calculate_new_value function which calculates value of indicator output.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"Example: Bollinger Bands (BB) indicator owns 2 internal sub-indicators","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"central_band which is a simple moving average of prices,\nstd_dev which is standard deviation of prices.","category":"page"},{"location":"internals/#Composing-new-indicators","page":"Internals","title":"Composing new indicators","text":"","category":"section"},{"location":"internals/#Indicators-chaining","page":"Internals","title":"Indicators chaining","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"All indicators come with a great feature named indicators chaining. It's like building new indicator with Lego™ bricks.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"Example:","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"DEMA : 2 EMA chained together\nTEMA : 3 EMA chained together","category":"page"},{"location":"internals/#Filtering-and-transforming-input","page":"Internals","title":"Filtering and transforming input","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Thanks to this indicator chaining feature it's possible to compose more complex indicators on top of the existing and simpler ones.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"A mechanism for filtering and transforming input of an indicator which is feeded by an another one (using generally anonymous functions) have also be implemented.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"Input of an indicator can be filtered / transformed to be used internaly by sub-indicators or be processed directly by _calculate_new_value function.","category":"page"},{"location":"internals/#Moving-average-factory","page":"Internals","title":"Moving average factory","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"SMA, EMA, ... are moving average.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"Most complex indicators uses in their original form SMA or EMA as default moving average.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"In some markets they can perform better by using instead an other kind of moving average.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"A moving average factory have been implemented ","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"This kind of indicators have a ma parameter in order to bypass their default moving average uses.","category":"page"},{"location":"api/#API-Documentation","page":"API","title":"API Documentation","text":"","category":"section"},{"location":"api/#Indicators-(alphabetically-ordered)","page":"API","title":"Indicators (alphabetically ordered)","text":"","category":"section"},{"location":"api/#OnlineTechnicalIndicators.ADX","page":"API","title":"OnlineTechnicalIndicators.ADX","text":"ADX{Tohlcv}(; di_period = 14, adx_period = 14, input_filter = always_true, input_modifier = identity, input_modifier_return_type = Tohlcv)\n\nThe ADX type implements an Average Directional Index indicator.\n\nOutput\n\nADXVal: A value containing adx, plus_di, and minus_di values\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.ALMA","page":"API","title":"OnlineTechnicalIndicators.ALMA","text":"ALMA{T}(; period = ALMA_PERIOD, offset = ALMA_OFFSET, sigma = ALMA_SIGMA, input_filter = always_true, input_modifier = identity, input_modifier_return_type = T)\n\nThe ALMA type implements an Arnaud Legoux Moving Average indicator.\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.AO","page":"API","title":"OnlineTechnicalIndicators.AO","text":"AO{Tohlcv}(; fast_period = AO_FAST_PERIOD, slow_period = AO_SLOW_PERIOD, fast_ma = SMA, slow_ma = SMA, input_filter = always_true, input_modifier = identity, input_modifier_return_type = Tohlcv)\n\nThe AO type implements an Awesome Oscillator indicator.\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.ATR","page":"API","title":"OnlineTechnicalIndicators.ATR","text":"ATR{Tohlcv}(; period = ATR_PERIOD, ma = SMMA, input_filter = always_true, input_modifier = identity, input_modifier_return_type = Tohlcv)\n\nThe ATR type implements an Average True Range indicator.\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.AccuDist","page":"API","title":"OnlineTechnicalIndicators.AccuDist","text":"AccuDist{Tohlcv}(input_filter = always_true, input_modifier = identity)\n\nThe AccuDist type implements an Accumulation and Distribution indicator.\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.Aroon","page":"API","title":"OnlineTechnicalIndicators.Aroon","text":"Aroon{Tohlcv}(; period = Aroon_PERIOD, input_filter = always_true, input_modifier = identity, input_modifier_return_type = Tohlcv)\n\nThe Aroon type implements an Aroon indicator.\n\nOutput\n\nAroonVal: A value containing up and down values\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.BB","page":"API","title":"OnlineTechnicalIndicators.BB","text":"BB{T}(; period = BB_PERIOD, std_dev_mult = BB_STD_DEV_MULT, ma = SMA, input_filter = always_true, input_modifier = identity, input_modifier_return_type = T)\n\nThe BB type implements Bollinger Bands indicator.\n\nOutput\n\nBBVal: A value containing lower, central, and upper band values\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.BOP","page":"API","title":"OnlineTechnicalIndicators.BOP","text":"BOP{Tohlcv}(input_filter = always_true, input_modifier = identity, input_modifier_return_type = Tohlcv)\n\nThe BOP type implements a Balance Of Power indicator.\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.CCI","page":"API","title":"OnlineTechnicalIndicators.CCI","text":"CCI{Tohlcv}(; period=CCI_PERIOD, input_filter = always_true, input_modifier = identity, input_modifier_return_type = Tohlcv)\n\nThe CCI type implements a Commodity Channel Index.\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.CHOP","page":"API","title":"OnlineTechnicalIndicators.CHOP","text":"CHOP{Tohlcv}(; period = CHOP_PERIOD, input_filter = always_true, input_modifier = identity, input_modifier_return_type = Tohlcv)\n\nThe CHOP type implements a Choppiness Index indicator.\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.ChaikinOsc","page":"API","title":"OnlineTechnicalIndicators.ChaikinOsc","text":"ChaikinOsc{Tohlcv}(; fast_period = ChaikinOsc_FAST_PERIOD, slow_period = ChaikinOsc_SLOW_PERIOD, fast_ma = EMA, slow_ma = EMA, input_filter = always_true, input_modifier = identity, input_modifier_return_type = Tohlcv)\n\nThe ChaikinOsc type implements a Chaikin Oscillator.\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.ChandeKrollStop","page":"API","title":"OnlineTechnicalIndicators.ChandeKrollStop","text":"ChandeKrollStop{Tohlcv}(; atr_period = ChandeKrollStop_ATR_PERIOD, atr_mult = ChandeKrollStop_ATR_MULT, period = ChandeKrollStop_PERIOD, input_filter = always_true, input_modifier = identity, input_modifier_return_type = Tohlcv)\n\nThe ChandeKrollStop type implements a ChandeKrollStop indicator.\n\nOutput\n\nChandeKrollStopVal: A value containing short_stop and long_stop values\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.CoppockCurve","page":"API","title":"OnlineTechnicalIndicators.CoppockCurve","text":"CoppockCurve{T}(; fast_roc_period = CoppockCurve_FAST_ROC_PERIOD, slow_roc_period = CoppockCurve_SLOW_ROC_PERIOD, wma_period = CoppockCurve_WMA_PERIOD, input_filter = always_true, input_modifier = identity, input_modifier_return_type = T)\n\nThe CoppockCurve type implements a Coppock Curve indicator.\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.DEMA","page":"API","title":"OnlineTechnicalIndicators.DEMA","text":"DEMA{T}(; period = DEMA_PERIOD, input_filter = always_true, input_modifier = identity, input_modifier_return_type = T)\n\nThe DEMA type implements a Double Exponential Moving Average indicator.\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.DPO","page":"API","title":"OnlineTechnicalIndicators.DPO","text":"DPO{T}(; period = DPO_PERIOD, input_filter = always_true, input_modifier = identity, input_modifier_return_type = T)\n\nThe DPO type implements a Detrended Price Oscillator indicator.\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.DonchianChannels","page":"API","title":"OnlineTechnicalIndicators.DonchianChannels","text":"DonchianChannels{Tohlcv}(; period = DonchianChannels_ATR_PERIOD, input_filter = always_true, input_modifier = identity, input_modifier_return_type = Tohlcv)\n\nThe DonchianChannels type implements a Donchian Channels indicator.\n\nOutput\n\nDonchianChannelsVal: A value containing lower, central, and upper channel values\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.EMA","page":"API","title":"OnlineTechnicalIndicators.EMA","text":"EMA{T}(; period = EMA_PERIOD, input_filter = always_true, input_modifier = identity, input_modifier_return_type = T)\n\nThe EMA type implements an Exponential Moving Average indicator.\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.EMV","page":"API","title":"OnlineTechnicalIndicators.EMV","text":"EMV{Tohlcv}(; period = EMV_PERIOD, volume_div = EMV_VOLUME_DIV, ma = SMA, input_filter = always_true, input_modifier = identity, input_modifier_return_type = Tohlcv)\n\nThe EMV type implements a Ease of Movement indicator.\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.ForceIndex","page":"API","title":"OnlineTechnicalIndicators.ForceIndex","text":"ForceIndex{Tohlcv}(; period = ForceIndex_PERIOD, ma = EMA, input_filter = always_true, input_modifier = identity, input_modifier_return_type = Tohlcv)\n\nThe ForceIndex type implements a Force Index indicator.\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.HMA","page":"API","title":"OnlineTechnicalIndicators.HMA","text":"HMA{T}(; period = HMA_PERIOD, input_filter = always_true, input_modifier = identity, input_modifier_return_type = T)\n\nThe HMA type implements a Hull Moving Average indicator.\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.KAMA","page":"API","title":"OnlineTechnicalIndicators.KAMA","text":"KAMA{T}(; period = KAMA_PERIOD, fast_ema_constant_period = KAMA_FAST_EMA_CONSTANT_PERIOD, slow_ema_constant_period = KAMA_SLOW_EMA_CONSTANT_PERIOD, input_filter = always_true, input_modifier = identity, input_modifier_return_type = T)\n\nThe KAMA type implements a Kaufman's Adaptive Moving Average indicator.\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.KST","page":"API","title":"OnlineTechnicalIndicators.KST","text":"KST{T}(;\n    roc1_period = KST_ROC1_PERIOD,\n    roc1_ma_period = KST_ROC1_MA_PERIOD,\n    roc2_period = KST_ROC2_PERIOD,\n    roc2_ma_period = KST_ROC2_MA_PERIOD,\n    roc3_period = KST_ROC3_PERIOD,\n    roc3_ma_period = KST_ROC3_MA_PERIOD,\n    roc4_period = KST_ROC4_PERIOD,\n    roc4_ma_period = KST_ROC4_MA_PERIOD,\n    signal_period = KST_SIGNAL_PERIOD,\n    ma = SMA,\n    input_filter = always_true,\n    input_modifier = identity,\n    input_modifier_return_type = T\n)\n\nThe KST type implements Know Sure Thing indicator.\n\nOutput\n\nKSTVal: A value containing kst and signal values\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.KVO","page":"API","title":"OnlineTechnicalIndicators.KVO","text":"KVO{Tohlcv}(; fast_period = KVO_FAST_PERIOD, slow_period = KVO_SLOW_PERIOD, ma = EMA, input_filter = always_true, input_modifier = identity, input_modifier_return_type = Tohlcv)\n\nThe KVO type implements a Klinger Volume Oscillator.\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.KeltnerChannels","page":"API","title":"OnlineTechnicalIndicators.KeltnerChannels","text":"KeltnerChannels{Tohlcv}(; ma_period = KeltnerChannels_MA_PERIOD, atr_period = KeltnerChannels_ATR_PERIOD, atr_mult_up = KeltnerChannels_ATR_MULT_UP, atr_mult_down = KeltnerChannels_ATR_MULT_DOWN, ma = EMA, input_filter = always_true, input_modifier = identity, input_modifier_return_type = Tohlcv)\n\nThe KeltnerChannels type implements a Keltner Channels indicator.\n\nOutput\n\nKeltnerChannelsVal: A value containing lower, central, and upper channel values\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.MACD","page":"API","title":"OnlineTechnicalIndicators.MACD","text":"MACD{T}(; fast_period = MACD_FAST_PERIOD, slow_period = MACD_SLOW_PERIOD, signal_period = MACD_SIGNAL_PERIOD, ma = EMA, input_filter = always_true, input_modifier = identity, input_modifier_return_type = T)\n\nThe MACD type implements Moving Average Convergence Divergence indicator.\n\nOutput\n\nMACDVal: A value containing macd, signal, and histogram values\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.MassIndex","page":"API","title":"OnlineTechnicalIndicators.MassIndex","text":"MassIndex{T}(; ma_period = MassIndex_MA_PERIOD, ma_ma_period = MassIndex_MA_MA_PERIOD, ma_ratio_period = MassIndex_MA_RATIO_PERIOD, ma = EMA, input_filter = always_true, input_modifier = identity, input_modifier_return_type = T)\n\nThe MassIndex type implements a Commodity Channel Index.\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.McGinleyDynamic","page":"API","title":"OnlineTechnicalIndicators.McGinleyDynamic","text":"McGinleyDynamic{T}(; period = McGinleyDynamic_PERIOD, input_filter = always_true, input_modifier = identity, input_modifier_return_type = T)\n\nThe McGinleyDynamic type implements a McGinley Dynamic indicator.\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.MeanDev","page":"API","title":"OnlineTechnicalIndicators.MeanDev","text":"MeanDev{T}(; period = MeanDev_PERIOD, ma = SMA, input_filter = always_true, input_modifier = identity, input_modifier_return_type = T)\n\nThe MeanDev type implements a Mean Deviation indicator.\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.NATR","page":"API","title":"OnlineTechnicalIndicators.NATR","text":"NATR{Tohlcv}(; period = ATR_PERIOD, ma = SMMA, input_filter = always_true, input_modifier = identity, input_modifier_return_type = Tohlcv)\n\nThe NATR type implements a Normalized Average True Range indicator.\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.OBV","page":"API","title":"OnlineTechnicalIndicators.OBV","text":"OBV{Tohlcv}(input_filter = always_true, input_modifier = identity, input_modifier_return_type = Tohlcv)\n\nThe OBV type implements On Balance Volume indicator.\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.ParabolicSAR","page":"API","title":"OnlineTechnicalIndicators.ParabolicSAR","text":"ParabolicSAR{Tohlcv}(; atr_period = ParabolicSAR_ATR_PERIOD, mult = ParabolicSAR_MULT, input_filter = always_true, input_modifier = identity, input_modifier_return_type = Tohlcv)\n\nThe ParabolicSAR type implements a Super Trend indicator.\n\nOutput\n\nParabolicSARVal: A value containing value, trend, ep, and accel_factor values\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.PivotsHL","page":"API","title":"OnlineTechnicalIndicators.PivotsHL","text":"PivotsHL{Tohlcv}(; high_period = PivotsHL_HIGH_PERIOD, low_period = PivotsHL_LOW_PERIOD, input_filter = always_true, input_modifier = identity, input_modifier_return_type = Tohlcv)\n\nThe PivotsHL type implements a High/Low Pivots Indicator.\n\nOutput\n\nPivotsHLVal: A value containing ohlcv, type, and isnew values\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.ROC","page":"API","title":"OnlineTechnicalIndicators.ROC","text":"ROC{T}(; period = ROC_PERIOD, input_filter = always_true, input_modifier = identity, input_modifier_return_type = T)\n\nThe ROC type implements a Rate Of Change indicator.\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.RSI","page":"API","title":"OnlineTechnicalIndicators.RSI","text":"RSI{T}(; period = SMA_PERIOD, input_filter = always_true, input_modifier = identity, input_modifier_return_type = T)\n\nThe RSI type implements a Relative Strength Index indicator.\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.SFX","page":"API","title":"OnlineTechnicalIndicators.SFX","text":"SFX{Tohlcv}(; atr_period = SFX_ATR_PERIOD, std_dev_period = SFX_STD_DEV_PERIOD, std_dev_smoothing_period = SFX_STD_DEV_SMOOTHING_PERIOD, ma = SMA, , input_filter = always_true, input_modifier = identity, input_modifier_return_type = T)\n\nThe SFX type implements a SFX indicator.\n\nOutput\n\nSFXVal: A value containing atr, std_dev, and ma_std_dev values\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.SMA","page":"API","title":"OnlineTechnicalIndicators.SMA","text":"SMA{T1}(; period = SMA_PERIOD, input_filter = always_true, input_modifier = identity, input_modifier_return_type = T2)\n\nThe SMA type implements a Simple Moving Average indicator.\n\nfit!(o, val) with o of type SMA will catch val of type T1\n\ninput val will be filtered using input_filter function (true means that val will be provided to o)\n\ninput val will be modified/transformed using input_modifier function (default is identity function which means that val won't be modified)\n\ninput_modifier_return_type is the type T2 of return of the input_modifier function it's also type of indicator value\n\nby default T2 = T1\n\nIN = false means that indicator is of \"single input\" type IN = true means that indicator is of \"multiple input\" (candle) type\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.SMMA","page":"API","title":"OnlineTechnicalIndicators.SMMA","text":"SMMA{T}(; period = SMMA_PERIOD, input_filter = always_true, input_modifier = identity, input_modifier_return_type = T)\n\nThe SMMA type implements a SMoothed Moving Average indicator.\n\nSMMA can also in american technical analysis litterature be named Wilder's moving average.\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.SOBV","page":"API","title":"OnlineTechnicalIndicators.SOBV","text":"SOBV{Tohlcv}(; period = SOBV_PERIOD, ma = SMA, input_filter = always_true, input_modifier = identity, input_modifier_return_type = Tohlcv)\n\nThe SOBV type implements a Smoothed On Balance Volume indicator.\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.STC","page":"API","title":"OnlineTechnicalIndicators.STC","text":"STC{T}(; fast_macd_period = STC_FAST_MACD_PERIOD, slow_macd_period = STC_SLOW_MACD_PERIOD, stoch_period = STC_STOCH_PERIOD, stoch_smoothing_period = STC_STOCH_SMOOTHING_PERIOD, ma = SMA, , input_filter = always_true, input_modifier = identity, input_modifier_return_type = T)\n\nThe STC type implements a Schaff Trend Cycle indicator.\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.StdDev","page":"API","title":"OnlineTechnicalIndicators.StdDev","text":"StdDev{T}(; period = StdDev_PERIOD, input_filter = always_true, input_modifier = identity, input_modifier_return_type = T)\n\nThe StdDev type implements a Standard Deviation indicator.\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.Stoch","page":"API","title":"OnlineTechnicalIndicators.Stoch","text":"Stoch{Tohlcv}(; period = STOCH_PERIOD, smoothing_period = STOCH_SMOOTHING_PERIOD, ma = SMA, input_filter = always_true, input_modifier = identity, input_modifier_return_type = Tohlcv)\n\nThe Stoch type implements the Stochastic indicator.\n\nOutput\n\nStochVal: A value containing k and d values\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.StochRSI","page":"API","title":"OnlineTechnicalIndicators.StochRSI","text":"StochRSI{T}(; rsi_period = StochRSI_RSI_PERIOD, stoch_period = StochRSI_STOCH_PERIOD, k_smoothing_period = StochRSI_K_SMOOTHING_PERIOD, d_smoothing_period = StochRSI_D_SMOOTHING_PERIOD, ma = SMA, input_filter = always_true, input_modifier = identity, input_modifier_return_type = Tval)\n\nThe StochRSI type implements Stochastic RSI indicator.\n\nOutput\n\nStochRSIVal: A value containing k and d values\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.SuperTrend","page":"API","title":"OnlineTechnicalIndicators.SuperTrend","text":"SuperTrend{Tohlcv}(; atr_period = SuperTrend_ATR_PERIOD, mult = SuperTrend_MULT, input_filter = always_true, input_modifier = identity, input_modifier_return_type = T)\n\nThe SuperTrend type implements a Super Trend indicator.\n\nOutput\n\nSuperTrendVal: A value containing value and trend values\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.T3","page":"API","title":"OnlineTechnicalIndicators.T3","text":"T3{T}(; period = T3_PERIOD, factor = T3_FACTOR, input_filter = always_true, input_modifier = identity, input_modifier_return_type = T)\n\nThe T3 type implements a T3 Moving Average indicator.\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.TEMA","page":"API","title":"OnlineTechnicalIndicators.TEMA","text":"TEMA{T}(; period = TEMA_PERIOD, ma = EMA, input_filter = always_true, input_modifier = identity, input_modifier_return_type = T)\n\nThe TEMA type implements a Triple Exponential Moving Average indicator.\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.TRIX","page":"API","title":"OnlineTechnicalIndicators.TRIX","text":"TRIX{T}(; period = TRIX_PERIOD, input_filter = always_true, input_modifier = identity, input_modifier_return_type = T)\n\nThe TRIX type implements a TRIX Moving Average indicator.\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.TrueRange","page":"API","title":"OnlineTechnicalIndicators.TrueRange","text":"TrueRange{Tohlcv}(; input_filter = always_true, input_modifier = identity, input_modifier_return_type = Tohlcv)\n\nThe TrueRange type implements a True Range indicator.\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.TSI","page":"API","title":"OnlineTechnicalIndicators.TSI","text":"TSI{T}(; fast_period = TSI_FAST_PERIOD, slow_period = TSI_SLOW_PERIOD, ma = EMA, input_filter = always_true, input_modifier = identity, input_modifier_return_type = T)\n\nThe TSI type implements a True Strength Index indicator.\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.TTM","page":"API","title":"OnlineTechnicalIndicators.TTM","text":"TTM{Tohlcv}(; atr_period = TTM_ATR_PERIOD, std_dev_period = TTM_STD_DEV_PERIOD, std_dev_smoothing_period = TTM_STD_DEV_SMOOTHING_PERIOD, ma = SMA)\n\nThe TTM type implements a TTM indicator.\n\nOutput\n\nTTMVal: A value containing squeeze and histogram values\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.UO","page":"API","title":"OnlineTechnicalIndicators.UO","text":"UO{Tohlcv}(; fast_period = UO_FAST_PERIOD, mid_period = UO_MID_PERIOD, slow_period = UO_SLOW_PERIOD, input_filter = always_true, input_modifier = identity, input_modifier_return_type = Tohlcv)\n\nThe UO type implements an Ultimate Oscillator.\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.VTX","page":"API","title":"OnlineTechnicalIndicators.VTX","text":"VTX{Tohlcv}(; period = VTX_PERIOD, input_filter = always_true, input_modifier = identity, input_modifier_return_type = Tohlcv)\n\nThe VTX type implements a Vortex Indicator.\n\nOutput\n\nVTXVal: A value containing plus_vtx and minus_vtx values\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.VWAP","page":"API","title":"OnlineTechnicalIndicators.VWAP","text":"VWAP{Tohlcv}(input_filter = always_true, input_modifier = identity, input_modifier_return_type = T)\n\nThe VWAP type implements a Volume Weighted Moving Average indicator.\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.VWMA","page":"API","title":"OnlineTechnicalIndicators.VWMA","text":"VWMA{Tohlcv}(; period = VWMA_PERIOD, input_filter = always_true, input_modifier = identity, input_modifier_return_type = Tohlcv)\n\nThe VWMA type implements a Volume Weighted Moving Average indicator.\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.WMA","page":"API","title":"OnlineTechnicalIndicators.WMA","text":"WMA{T}(; period = WMA_PERIOD, input_filter = always_true, input_modifier = identity, input_modifier_return_type = T)\n\nThe WMA type implements a Weighted Moving Average indicator.\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.ZLEMA","page":"API","title":"OnlineTechnicalIndicators.ZLEMA","text":"ZLEMA{T}(; period=ZLEMA_PERIOD, input_filter = always_true, input_modifier = identity, input_modifier_return_type = T)\n\nThe ZLEMA type implements a Zero Lag Exponential Moving Average indicator.\n\n\n\n\n\n","category":"type"},{"location":"api/#Indicator-Value-Types-(alphabetically-ordered)","page":"API","title":"Indicator Value Types (alphabetically ordered)","text":"","category":"section"},{"location":"api/#OnlineTechnicalIndicators.ADXVal","page":"API","title":"OnlineTechnicalIndicators.ADXVal","text":"ADXVal{Tval}\n\nReturn value type for Average Directional Index indicator.\n\nFields\n\nadx::Union{Missing,Tval}: Average Directional Index value (trend strength)\nplus_di::Tval: Plus Directional Indicator (+DI)\nminus_di::Tval: Minus Directional Indicator (-DI)\n\nSee also: ADX\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.AroonVal","page":"API","title":"OnlineTechnicalIndicators.AroonVal","text":"AroonVal{Tval}\n\nReturn value type for Aroon indicator.\n\nFields\n\nup::Tval: Aroon Up (time since highest high)\ndown::Tval: Aroon Down (time since lowest low)\n\nSee also: Aroon\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.BBVal","page":"API","title":"OnlineTechnicalIndicators.BBVal","text":"BBVal{Tval}\n\nReturn value type for Bollinger Bands indicator containing three bands.\n\nFields\n\nlower::Tval: Lower band (central - stddevmult * standard deviation)\ncentral::Tval: Central band (moving average)\nupper::Tval: Upper band (central + stddevmult * standard deviation)\n\nSee also: BB\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.ChandeKrollStopVal","page":"API","title":"OnlineTechnicalIndicators.ChandeKrollStopVal","text":"ChandeKrollStopVal{Tval}\n\nReturn value type for Chande Kroll Stop indicator.\n\nFields\n\nshort_stop::Tval: Short stop level (for short positions)\nlong_stop::Tval: Long stop level (for long positions)\n\nSee also: ChandeKrollStop\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.DonchianChannelsVal","page":"API","title":"OnlineTechnicalIndicators.DonchianChannelsVal","text":"DonchianChannelsVal{Tval}\n\nReturn value type for Donchian Channels indicator.\n\nFields\n\nlower::Tval: Lower channel (lowest low over period)\ncentral::Tval: Central line (midpoint between upper and lower)\nupper::Tval: Upper channel (highest high over period)\n\nSee also: DonchianChannels\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.KSTVal","page":"API","title":"OnlineTechnicalIndicators.KSTVal","text":"KSTVal{Tval}\n\nReturn value type for Know Sure Thing (KST) indicator.\n\nFields\n\nkst::Tval: KST line (weighted sum of smoothed ROC values)\nsignal::Union{Missing,Tval}: Signal line (moving average of KST)\n\nSee also: KST\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.KeltnerChannelsVal","page":"API","title":"OnlineTechnicalIndicators.KeltnerChannelsVal","text":"KeltnerChannelsVal{Tval}\n\nReturn value type for Keltner Channels indicator.\n\nFields\n\nlower::Tval: Lower channel (central - ATR * multiplier)\ncentral::Tval: Central line (moving average)\nupper::Tval: Upper channel (central + ATR * multiplier)\n\nSee also: KeltnerChannels\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.MACDVal","page":"API","title":"OnlineTechnicalIndicators.MACDVal","text":"MACDVal{Tval}\n\nReturn value type for Moving Average Convergence Divergence indicator.\n\nFields\n\nmacd::Union{Missing,Tval}: MACD line (fast MA - slow MA)\nsignal::Union{Missing,Tval}: Signal line (MA of MACD line)\nhistogram::Union{Missing,Tval}: MACD histogram (MACD - signal)\n\nSee also: MACD\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.ParabolicSARVal","page":"API","title":"OnlineTechnicalIndicators.ParabolicSARVal","text":"ParabolicSARVal{Tval}\n\nReturn value type for Parabolic SAR indicator.\n\nFields\n\nvalue::Tval: SAR value (stop and reverse price level)\ntrend::SARTrend.TrendEnum: Current trend direction (UP or DOWN)\nep::Tval: Extreme point (highest high or lowest low)\naccel_factor::Tval: Current acceleration factor\n\nSee also: ParabolicSAR\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.PivotsHLVal","page":"API","title":"OnlineTechnicalIndicators.PivotsHLVal","text":"PivotsHLVal{Tohlcv}\n\nReturn value type for High/Low Pivots indicator.\n\nFields\n\nohlcv::Tohlcv: OHLCV data at the pivot point\ntype::HLType.HLTypeEnum: Type of pivot (HIGH or LOW)\nisnew::Bool: Whether this is a new pivot point\n\nSee also: PivotsHL\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.SFXVal","page":"API","title":"OnlineTechnicalIndicators.SFXVal","text":"SFXVal{Tval}\n\nReturn value type for SFX indicator.\n\nFields\n\natr::Union{Missing,Tval}: Average True Range\nstd_dev::Tval: Standard deviation of price\nma_std_dev::Union{Missing,Tval}: Moving average of standard deviation\n\nSee also: SFX\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.StochVal","page":"API","title":"OnlineTechnicalIndicators.StochVal","text":"StochVal{Tprice}\n\nReturn value type for Stochastic oscillator indicator.\n\nFields\n\nk::Tprice: %K line (fast stochastic)\nd::Union{Missing,Tprice}: %D line (slow stochastic, smoothed %K)\n\nSee also: Stoch\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.StochRSIVal","page":"API","title":"OnlineTechnicalIndicators.StochRSIVal","text":"StochRSIVal{Tval}\n\nReturn value type for Stochastic RSI indicator.\n\nFields\n\nk::Tval: %K line (stochastic of RSI)\nd::Union{Missing,Tval}: %D line (smoothed %K)\n\nSee also: StochRSI\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.SuperTrendVal","page":"API","title":"OnlineTechnicalIndicators.SuperTrendVal","text":"SuperTrendVal{Tval}\n\nReturn value type for Super Trend indicator.\n\nFields\n\nvalue::Tval: Super Trend value (support/resistance level)\ntrend::Trend.TrendEnum: Current trend direction (UP or DOWN)\n\nSee also: SuperTrend\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.TTMVal","page":"API","title":"OnlineTechnicalIndicators.TTMVal","text":"TTMVal{Tval}\n\nReturn value type for TTM Squeeze indicator.\n\nFields\n\nsqueeze::Bool: Squeeze status (true = squeeze on, false = squeeze off)\nhistogram::Tval: Momentum histogram value\n\nSee also: TTM\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.VTXVal","page":"API","title":"OnlineTechnicalIndicators.VTXVal","text":"VTXVal{Tval}\n\nReturn value type for Vortex Indicator.\n\nFields\n\nplus_vtx::Tval: Plus Vortex Indicator (+VI)\nminus_vtx::Tval: Minus Vortex Indicator (-VI)\n\nSee also: VTX\n\n\n\n\n\n","category":"type"},{"location":"api/#Core-Types","page":"API","title":"Core Types","text":"","category":"section"},{"location":"api/#OnlineTechnicalIndicators.OHLCV","page":"API","title":"OnlineTechnicalIndicators.OHLCV","text":"OHLCV{Ttime,Tprice,Tvol}\n\nRepresents OHLCV (Open, High, Low, Close, Volume) candlestick data with optional timestamp.\n\nFields\n\nopen::Tprice: Opening price of the period\nhigh::Tprice: Highest price during the period\nlow::Tprice: Lowest price during the period\nclose::Tprice: Closing price of the period\nvolume::Tvol: Trading volume during the period (optional, defaults to missing)\ntime::Ttime: Timestamp of the candlestick (optional, defaults to missing)\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.OHLCVFactory","page":"API","title":"OnlineTechnicalIndicators.OHLCVFactory","text":"OHLCVFactory{Ttime,Tprice,Tvol}\n\nFactory for creating multiple OHLCV candlesticks from vectors of price data.\n\nFields\n\nopen::Vector{Tprice}: Vector of opening prices\nhigh::Vector{Tprice}: Vector of high prices\nlow::Vector{Tprice}: Vector of low prices\nclose::Vector{Tprice}: Vector of closing prices\nvolume::Vector{Tvol}: Vector of volumes (optional)\ntime::Vector{Ttime}: Vector of timestamps (optional)\n\nUse Base.collect(factory) to generate a vector of OHLCV instances.\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.MAFactory","page":"API","title":"OnlineTechnicalIndicators.MAFactory","text":"MAFactory\n\nFactory for creating moving average indicators with a specific type parameter.\n\nFields\n\nT::Type: The type parameter to use when constructing the moving average indicator\n\nUsage\n\nfactory = MAFactory(Float64)\nma = factory(SMA, period = 10)  # Creates SMA{Float64}(period = 10)\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.SampleData.TabOHLCV","page":"API","title":"OnlineTechnicalIndicators.SampleData.TabOHLCV","text":"TabOHLCV\n\nSample OHLCV data table implementing the Tables.jl interface.\n\nContains template financial data with Date indices and Float64 price/volume values.\n\nFields\n\nIndex::Vector{Date}: Vector of dates\nOpen::Vector{Float64}: Opening prices\nHigh::Vector{Float64}: High prices\nLow::Vector{Float64}: Low prices\nClose::Vector{Float64}: Closing prices\nVolume::Vector{Float64}: Trading volumes\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.TechnicalIndicatorWrapper","page":"API","title":"OnlineTechnicalIndicators.TechnicalIndicatorWrapper","text":"TechnicalIndicatorWrapper{T}\n\nWraps a technical indicator type with its constructor arguments for deferred instantiation.\n\nFields\n\nindicator_type::T: The type of technical indicator to construct\nargs::Tuple: Positional arguments for the indicator constructor\nkwargs::Base.Pairs: Keyword arguments for the indicator constructor\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.TechnicalIndicatorResults","page":"API","title":"OnlineTechnicalIndicators.TechnicalIndicatorResults","text":"TechnicalIndicatorResults{Ttime,Tout}\n\nContainer for technical indicator results implementing the Tables.jl interface.\n\nFields\n\nname::Symbol: Name of the indicator\nfieldnames::Tuple: Names of the output fields\nfieldtypes::Tuple: Types of the output fields\nindex::Vector{Ttime}: Vector of timestamps/indices\noutput::Vector{Tout}: Vector of indicator output values\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.Resample.SamplingPeriod","page":"API","title":"OnlineTechnicalIndicators.Resample.SamplingPeriod","text":"SamplingPeriod\n\nDefines a time period for resampling data.\n\nFields\n\ntype::TimeUnitType.TimeUnitTypeEnum: Type of time unit (SEC, MIN, HOUR, DAY)\nlength::Integer: Length of the period in the specified time units\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.Resample.Resampler","page":"API","title":"OnlineTechnicalIndicators.Resample.Resampler","text":"Resampler\n\nResamples time-series data according to a specified sampling period.\n\nFields\n\nsampling_period::SamplingPeriod: The sampling period to use for resampling\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.Resample.TimedEvent","page":"API","title":"OnlineTechnicalIndicators.Resample.TimedEvent","text":"TimedEvent\n\nRepresents a data point with an associated timestamp.\n\nFields\n\ntime: Timestamp of the event\ndata: The data value at this time\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.Resample.AgregatedStat","page":"API","title":"OnlineTechnicalIndicators.Resample.AgregatedStat","text":"AgregatedStat\n\nHolds aggregated statistical data for a time period.\n\nFields\n\ntime: Timestamp of the aggregated period\ndata: The aggregated statistical value\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.Resample.StatBuilder","page":"API","title":"OnlineTechnicalIndicators.Resample.StatBuilder","text":"StatBuilder\n\nBuilder for creating new statistical aggregation instances.\n\nFields\n\nagg: A callable that creates new aggregation instances when invoked\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.Resample.OHLC","page":"API","title":"OnlineTechnicalIndicators.Resample.OHLC","text":"OHLC{Tprice}\n\nMutable OHLC (Open, High, Low, Close) data structure for resampling price data.\n\nFields\n\nstatus::OHLCStatus.OHLCStatusEnum: Status of the OHLC data (INIT, NEW, USED)\nopen::Tprice: Opening price\nhigh::Tprice: Highest price\nlow::Tprice: Lowest price\nclose::Tprice: Closing price\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.Resample.OHLCStat","page":"API","title":"OnlineTechnicalIndicators.Resample.OHLCStat","text":"OHLCStat{T} <: OnlineStat{T}\n\nOnline statistic for computing OHLC values from streaming price data.\n\nFields\n\nohlc::OHLC: The current OHLC values\nn::Int: Number of observations processed\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.Resample.ResamplerBy","page":"API","title":"OnlineTechnicalIndicators.Resample.ResamplerBy","text":"ResamplerBy <: OnlineStat{TimedEvent}\n\nOnline statistic that resamples timed events into aggregated periods.\n\nFields\n\nagg::AgregatedStat: Current aggregated statistic\nn::Int: Number of observations processed\nsampling_period::SamplingPeriod: The sampling period to use\nstat_builder::StatBuilder: Builder for creating new aggregation instances\ninput_modifier::Function: Function to modify input data before processing\ninput_filter::Function: Function to filter input data\n\n\n\n\n\n","category":"type"},{"location":"api/#Other","page":"API","title":"Other","text":"","category":"section"},{"location":"api/#OnlineTechnicalIndicators.StatLag","page":"API","title":"OnlineTechnicalIndicators.StatLag","text":"StatLag(ind, b)\n\nTrack a moving window (previous b copies) of ind.\n\nExample\n\nind = SMA{Float64}(period = 3)\nprices = [10.81, 10.58, 10.07, 10.58, 10.56, 10.4, 10.74, 10.16, 10.29, 9.4, 9.62]\nind = StatLag(ind, 4)\nfit!(ind, prices)\nind.lag[end-1]\n\n\n\n\n\n","category":"type"},{"location":"api/#OnlineTechnicalIndicators.TechnicalIndicatorIterator","page":"API","title":"OnlineTechnicalIndicators.TechnicalIndicatorIterator","text":"TechnicalIndicatorIterator(indicator_type, iterable_input, args...; kwargs...)\n\nReturns an iterator.\n\nExample\n\nusing OnlineTechnicalIndicators\nusing OnlineTechnicalIndicators.SampleData: CLOSE_TMPL\n\nSISO indicator\n\nitr = TechnicalIndicatorIterator(SMA, CLOSE_TMPL; period = 3)\n\nprintln(\"First iteration\")\nfor val in itr\n    println(val)\nend\n\nprintln(\"\")\n\nprintln(\"Second iteration\")\nIterators.reset!(itr)\nfor val in itr\n    println(val)\nend\n\nprintln(\"\")\n\nprintln(\"Third iteration with collect\")\n# itr = TechnicalIndicatorIterator(SMA, CLOSE_TMPL; period = 3)\n# or\nIterators.reset!(itr)\nprintln(eltype(itr))\nprintln(collect(itr))\n\nprintln(\"\")\n\nSIMO indicator\n\nitr = TechnicalIndicatorIterator(BB, CLOSE_TMPL)\nprintln(collect(itr))\n\n\n\n\n\n","category":"type"},{"location":"projects/#Projects","page":"Projects","title":"Projects","text":"","category":"section"},{"location":"projects/","page":"Projects","title":"Projects","text":"If you know of a project that should be included here, click on the edit icon on the top-right, and feel free to send a pull request.","category":"page"},{"location":"projects/#Users-of-OnlineTechnicalIndicators","page":"Projects","title":"Users of OnlineTechnicalIndicators","text":"","category":"section"},{"location":"projects/","page":"Projects","title":"Projects","text":"TechnicalIndicatorCharts.jl - Use OnlineTechnicalIndicators.jl together with LightweightCharts.jl. ","category":"page"},{"location":"projects/#Related-Projects","page":"Projects","title":"Related Projects","text":"","category":"section"},{"location":"projects/","page":"Projects","title":"Projects","text":"OnlinePortfolioAnalytics.jl - This project aims to provide users with functionality for performing quantitative portfolio analytics via online algorithms.","category":"page"},{"location":"usage_more/#Learn-more-about-OnlineTechnicalIndicators-usage","page":"Learn more about usage","title":"Learn more about OnlineTechnicalIndicators usage","text":"","category":"section"},{"location":"usage_more/#Feeding-a-technical-analysis-indicator-one-observation-at-a-time","page":"Learn more about usage","title":"Feeding a technical analysis indicator one observation at a time","text":"","category":"section"},{"location":"usage_more/","page":"Learn more about usage","title":"Learn more about usage","text":"A technical indicator can be feeded using fit! function.\nIt's feeded one observation at a time.","category":"page"},{"location":"usage_more/#Showing-sample-data-(close-prices)","page":"Learn more about usage","title":"Showing sample data (close prices)","text":"","category":"section"},{"location":"usage_more/","page":"Learn more about usage","title":"Learn more about usage","text":"Some sample data are provided for testing purpose.","category":"page"},{"location":"usage_more/","page":"Learn more about usage","title":"Learn more about usage","text":"julia> using OnlineTechnicalIndicators\njulia> using OnlineTechnicalIndicators.SampleData: CLOSE_TMPL, V_OHLCV\njulia> CLOSE_TMPL\n50-element Vector{Float64}:\n 10.5\n  9.78\n 10.46\n 10.51\n  ⋮\n 10.15\n 10.3\n 10.59\n 10.23\n 10.0","category":"page"},{"location":"usage_more/#Calculate-SMA-(simple-moving-average)","page":"Learn more about usage","title":"Calculate SMA (simple moving average)","text":"","category":"section"},{"location":"usage_more/","page":"Learn more about usage","title":"Learn more about usage","text":"julia> ind = SMA{Float64}(period = 3)  # this is a SISO (single input / single output) indicator\nSMA: n=0 | value=missing\n\njulia> for p in CLOSE_TMPL\n           fit!(ind, p)\n           println(value(ind))\n       end\nmissing\nmissing\n10.246666666666668\n10.250000000000002\n10.50666666666667\n10.593333333333335\n10.476666666666668\n ⋮\n9.283333333333339\n9.886666666666672\n10.346666666666671\n10.373333333333338\n10.273333333333339","category":"page"},{"location":"usage_more/#Calculate-BB-(Bollinger-bands)","page":"Learn more about usage","title":"Calculate BB (Bollinger bands)","text":"","category":"section"},{"location":"usage_more/","page":"Learn more about usage","title":"Learn more about usage","text":"julia> ind = BB{Float64}(period = 3)  # this is a SIMO (single input / multiple output) indicator\n       for p in CLOSE_TMPL\n           fit!(ind, p)\n           println(value(ind))\n       end\nmissing\nmissing\nOnlineTechnicalIndicators.BBVal{Float64}(9.585892709687261, 10.246666666666668, 10.907440623646075)\nOnlineTechnicalIndicators.BBVal{Float64}(9.584067070444279, 10.250000000000002, 10.915932929555725)\nOnlineTechnicalIndicators.BBVal{Float64}(10.433030926552087, 10.50666666666667, 10.580302406781252)\n ⋮\nOnlineTechnicalIndicators.BBVal{Float64}(7.923987085233826, 9.283333333333339, 10.642679581432851)\nOnlineTechnicalIndicators.BBVal{Float64}(8.921909932792502, 9.886666666666672, 10.851423400540842)\nOnlineTechnicalIndicators.BBVal{Float64}(9.981396599151932, 10.346666666666671, 10.71193673418141)\nOnlineTechnicalIndicators.BBVal{Float64}(10.061635473931714, 10.373333333333338, 10.685031192734963)\nOnlineTechnicalIndicators.BBVal{Float64}(9.787718030627357, 10.273333333333339, 10.758948636039321)","category":"page"},{"location":"usage_more/#Showing-sample-data-(OHLCV-data)","page":"Learn more about usage","title":"Showing sample data (OHLCV data)","text":"","category":"section"},{"location":"usage_more/","page":"Learn more about usage","title":"Learn more about usage","text":"julia> V_OHLCV  # fields are open/high/low/close/volume/time\n50-element Vector{OHLCV{Missing, Float64, Float64}}:\n OHLCV{Missing, Float64, Float64}(10.81, 11.02, 9.9, 10.5, 55.03, missing)\n OHLCV{Missing, Float64, Float64}(10.58, 10.74, 9.78, 9.78, 117.86, missing)\n OHLCV{Missing, Float64, Float64}(10.07, 10.65, 9.5, 10.46, 301.04, missing)\n OHLCV{Missing, Float64, Float64}(10.58, 11.05, 10.47, 10.51, 157.94, missing)\n ⋮\n OHLCV{Missing, Float64, Float64}(9.3, 10.5, 9.26, 10.15, 255.3, missing)\n OHLCV{Missing, Float64, Float64}(10.23, 10.3, 10.0, 10.3, 111.55, missing)\n OHLCV{Missing, Float64, Float64}(10.29, 10.86, 10.19, 10.59, 108.27, missing)\n OHLCV{Missing, Float64, Float64}(10.77, 10.77, 10.15, 10.23, 48.29, missing)\n OHLCV{Missing, Float64, Float64}(10.28, 10.39, 9.62, 10.0, 81.66, missing)","category":"page"},{"location":"usage_more/#Calculate-ATR-(Average-true-range)","page":"Learn more about usage","title":"Calculate ATR (Average true range)","text":"","category":"section"},{"location":"usage_more/","page":"Learn more about usage","title":"Learn more about usage","text":"julia> ind = ATR{OHLCV}(period = 3)  # this is a MISO (multi input / single output) indicator\nATR: n=0 | value=missing\n\njulia> for candle in V_OHLCV\n           fit!(ind, candle)\n           println(value(ind))\n       end\nmissing\nmissing\n1.0766666666666669\n0.9144444444444445\n0.7562962962962961\n ⋮\n0.898122497312842\n0.6987483315418949\n0.6891655543612633\n0.6661103695741752\n0.700740246382784","category":"page"},{"location":"usage_more/#Calculate-Stoch-(Stochastic)","page":"Learn more about usage","title":"Calculate Stoch (Stochastic)","text":"","category":"section"},{"location":"usage_more/","page":"Learn more about usage","title":"Learn more about usage","text":"julia> ind = Stoch{OHLCV{Missing,Float64,Float64}}(period = 3)  # this is a MIMO indicator\nStoch: n=0 | value=missing\n\njulia> for candle in V_OHLCV\n           fit!(ind, candle)\n           println(value(ind))\n       end\nOnlineTechnicalIndicators.StochVal{Float64}(53.57142857142858, missing)\nOnlineTechnicalIndicators.StochVal{Float64}(0.0, missing)\nOnlineTechnicalIndicators.StochVal{Float64}(63.15789473684218, 38.90977443609025)\nOnlineTechnicalIndicators.StochVal{Float64}(65.1612903225806, 42.77306168647426)\nOnlineTechnicalIndicators.StochVal{Float64}(67.74193548387099, 65.35370684776458)\n ⋮\nOnlineTechnicalIndicators.StochVal{Float64}(83.17307692307695, 54.98661936768733)\nOnlineTechnicalIndicators.StochVal{Float64}(90.38461538461543, 83.17307692307693)\nOnlineTechnicalIndicators.StochVal{Float64}(83.12500000000001, 85.56089743589745)\nOnlineTechnicalIndicators.StochVal{Float64}(26.744186046511697, 66.75126714370903)\nOnlineTechnicalIndicators.StochVal{Float64}(30.645161290322637, 46.83811577894477)","category":"page"},{"location":"usage_more/#Feeding-a-technical-analysis-indicator-with-a-compatible-Tables.jl-table-such-as-TSFrame","page":"Learn more about usage","title":"Feeding a technical analysis indicator with a compatible Tables.jl table such as TSFrame","text":"","category":"section"},{"location":"usage_more/","page":"Learn more about usage","title":"Learn more about usage","text":"A technical analysis indicator can also accept a Tables.jl compatible table (TSFrame) as input parameter.","category":"page"},{"location":"usage_more/#Showing-sample-data-(OHLCV-data)-2","page":"Learn more about usage","title":"Showing sample data (OHLCV data)","text":"","category":"section"},{"location":"usage_more/","page":"Learn more about usage","title":"Learn more about usage","text":"julia> using MarketData\njulia> using TSFrames\njulia> using Random\njulia> Random.seed!(1234)  # to have reproductible results (so won't be really random)\njulia> ta = random_ohlcv()  # should return a TimeSeries.TimeArray\njulia> ts = TSFrame(ta)  # converts a TimeSeries.TimeArray to TSFrames.TSFrame\n500×5 TSFrame with DateTime Index\n Index                Open     High     Low      Close    Volume\n DateTime             Float64  Float64  Float64  Float64  Float64\n──────────────────────────────────────────────────────────────────\n 2020-01-01T00:00:00   326.75   334.03   326.18   333.16     83.6\n 2020-01-01T01:00:00   333.29   334.6    330.01   330.3      45.9\n 2020-01-01T02:00:00   330.79   336.7    329.99   334.0      71.2\n 2020-01-01T03:00:00   334.83   339.79   334.83   338.39     97.1\n 2020-01-01T04:00:00   338.36   339.09   331.22   331.22     79.1\n          ⋮              ⋮        ⋮        ⋮        ⋮        ⋮\n 2020-01-21T15:00:00   353.2    360.62   349.99   358.86     59.0\n 2020-01-21T16:00:00   358.81   364.03   354.5    364.03      4.2\n 2020-01-21T17:00:00   363.06   367.52   362.31   362.31     90.0\n 2020-01-21T18:00:00   362.03   364.81   360.4    363.3      45.6\n 2020-01-21T19:00:00   362.35   363.23   358.28   361.52     19.8","category":"page"},{"location":"usage_more/#Simple-Moving-Average-(SMA)-of-close-prices","page":"Learn more about usage","title":"Simple Moving Average (SMA) of close prices","text":"","category":"section"},{"location":"usage_more/","page":"Learn more about usage","title":"Learn more about usage","text":"julia> SMA(ts; period = 3)\n500×1 TSFrame with DateTime Index\n Index                SMA\n DateTime             Float64?\n──────────────────────────────────\n 2020-01-01T00:00:00  missing\n 2020-01-01T01:00:00  missing\n 2020-01-01T02:00:00      332.487\n 2020-01-01T03:00:00      334.23\n 2020-01-01T04:00:00      334.537\n          ⋮                ⋮\n 2020-01-21T15:00:00      352.087\n 2020-01-21T16:00:00      358.41\n 2020-01-21T17:00:00      361.733\n 2020-01-21T18:00:00      363.213\n 2020-01-21T19:00:00      362.377","category":"page"},{"location":"usage_more/#Simple-Moving-Average-(SMA)-of-open-prices","page":"Learn more about usage","title":"Simple Moving Average (SMA) of open prices","text":"","category":"section"},{"location":"usage_more/","page":"Learn more about usage","title":"Learn more about usage","text":"julia> SMA(ts; period = 3, default = :Open)\n500×1 TSFrame with DateTime Index\n Index                SMA\n DateTime             Float64?\n──────────────────────────────────\n 2020-01-01T00:00:00  missing\n 2020-01-01T01:00:00  missing\n 2020-01-01T02:00:00      330.277\n 2020-01-01T03:00:00      332.97\n 2020-01-01T04:00:00      334.66\n          ⋮                ⋮\n 2020-01-21T15:00:00      346.72\n 2020-01-21T16:00:00      352.293\n 2020-01-21T17:00:00      358.357\n 2020-01-21T18:00:00      361.3\n 2020-01-21T19:00:00      362.48","category":"page"},{"location":"usage_more/#Calculate-BB-(Bollinger-bands)-2","page":"Learn more about usage","title":"Calculate BB (Bollinger bands)","text":"","category":"section"},{"location":"usage_more/","page":"Learn more about usage","title":"Learn more about usage","text":"julia> BB(ts; period = 3)\n500×3 TSFrame with DateTime Index\n Index                BB_lower     BB_central   BB_upper\n DateTime             Float64?     Float64?     Float64?\n────────────────────────────────────────────────────────────\n 2020-01-01T00:00:00  missing      missing      missing\n 2020-01-01T01:00:00  missing      missing      missing\n 2020-01-01T02:00:00      329.319      332.487      335.654\n 2020-01-01T03:00:00      327.617      334.23       340.843\n 2020-01-01T04:00:00      328.633      334.537      340.44\n          ⋮                ⋮            ⋮            ⋮\n 2020-01-21T15:00:00      340.813      352.087      363.36\n 2020-01-21T16:00:00      348.844      358.41       367.976\n 2020-01-21T17:00:00      357.434      361.733      366.033\n 2020-01-21T18:00:00      361.804      363.213      364.623\n 2020-01-21T19:00:00      360.92       362.377      363.833","category":"page"},{"location":"usage_more/#Calculate-ATR-(Average-true-range)-2","page":"Learn more about usage","title":"Calculate ATR (Average true range)","text":"","category":"section"},{"location":"usage_more/","page":"Learn more about usage","title":"Learn more about usage","text":"julia> ATR(ts; period = 3)\n500×1 TSFrame with DateTime Index\n Index                ATR\n DateTime             Float64?\n────────────────────────────────────\n 2020-01-01T00:00:00  missing\n 2020-01-01T01:00:00  missing\n 2020-01-01T02:00:00        6.38333\n 2020-01-01T03:00:00        6.18556\n 2020-01-01T04:00:00        6.74704\n          ⋮                 ⋮\n 2020-01-21T15:00:00        8.53068\n 2020-01-21T16:00:00        8.86378\n 2020-01-21T17:00:00        7.64586\n 2020-01-21T18:00:00        6.56724\n 2020-01-21T19:00:00        6.05149","category":"page"},{"location":"usage_more/#Calculate-Stoch-(Stochastic)-2","page":"Learn more about usage","title":"Calculate Stoch (Stochastic)","text":"","category":"section"},{"location":"usage_more/","page":"Learn more about usage","title":"Learn more about usage","text":"julia> Stoch(ts; period = 3)\n500×2 TSFrame with DateTime Index\n Index                Stoch_k    Stoch_d\n DateTime             Float64    Float64?\n───────────────────────────────────────────────\n 2020-01-01T00:00:00   88.9172   missing\n 2020-01-01T01:00:00   48.9311   missing\n 2020-01-01T02:00:00   74.3346        70.7276\n 2020-01-01T03:00:00   85.7143        69.66\n 2020-01-01T04:00:00   12.551         57.5333\n          ⋮               ⋮            ⋮\n 2020-01-21T15:00:00   91.4272        93.9504\n 2020-01-21T16:00:00  100.0           97.1424\n 2020-01-21T17:00:00   70.2795        87.2356\n 2020-01-21T18:00:00   67.5883        79.2893\n 2020-01-21T19:00:00   35.0649        57.6443","category":"page"},{"location":"usage/#Usage","page":"Usage","title":"Usage","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"See examples and tests","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"OnlineTechnicalIndicators.jl - installing and using it","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"(Image: OnlineTechnicalIndicators.jl - installing and using it)","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"OnlineTechnicalIndicators.jl - dealing with TSFrames","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"(Image: OnlineTechnicalIndicators.jl - dealing with TSFrames)","category":"page"},{"location":"examples/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/#OnlineTechnicalIndicators.jl-notebook","page":"Examples","title":"OnlineTechnicalIndicators.jl notebook","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"Pluto notebook\nPDF export","category":"page"},{"location":"examples/#Feed-OnlineTechnicalIndicators-indicators-with-live-random-data","page":"Examples","title":"Feed OnlineTechnicalIndicators indicators with live random data","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"(Image: random walk with MA and RSI)","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"Pluto notebook","category":"page"},{"location":"examples/#Code-examples","page":"Examples","title":"Code examples","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"See content of examples directory.","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: Build Status)","category":"page"},{"location":"#OnlineTechnicalIndicators.jl","page":"Home","title":"OnlineTechnicalIndicators.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This project implements some Technical Analysis Indicators in Julia in an incremental approach ie using online algorithms.","category":"page"},{"location":"","page":"Home","title":"Home","text":"It's inspired by Python project talipp which is used as \"reference implementation\" for unit tests.","category":"page"},{"location":"","page":"Home","title":"Home","text":"It depends especially on OnlineStatsBase.jl and on Tables.jl.","category":"page"},{"location":"","page":"Home","title":"Home","text":"Currently 57 technical analysis indicators are supported (SMA, EMA, SMMA, RSI, MeanDev, StdDev, ROC, WMA, KAMA, HMA, DPO, CoppockCurve, DEMA, TEMA, ALMA, McGinleyDynamic, ZLEMA, T3, TRIX, TSI ; BB, MACD, StochRSI, KST ; AccuDist, BOP, CCI, ChaikinOsc, VWMA, VWAP, AO, TrueRange, ATR, NATR, ForceIndex, OBV, SOBV, EMV, MassIndex, CHOP, KVO, UO ; Stoch, ADX, SuperTrend, VTX, DonchianChannels, KeltnerChannels, Aroon, ChandeKrollStop, ParabolicSAR, SFX, TTM, PivotsHL ; STC)","category":"page"},{"location":"","page":"Home","title":"Home","text":"🚧 This software is under construction. API can have breaking changes.","category":"page"},{"location":"#Disclaimer-–-No-Investment-Advice","page":"Home","title":"⚠️ Disclaimer – No Investment Advice","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"OnlineTechnicalIndicators.jl is an open-source library provided \"as-is\" for educational and informational purposes only.","category":"page"},{"location":"","page":"Home","title":"Home","text":"It does not constitute investment advice, brokerage services, or a recommendation to buy or sell any financial instrument.\nAll trading involves substantial risk; past performance is not indicative of future results. You may lose some or all of your capital.\nBy using OnlineTechnicalIndicators.jl you acknowledge that you alone are responsible for your trading decisions and agree that the OnlineTechnicalIndicators.jl maintainers and contributors will not be liable for any loss or damage arising from the use of this software.\nConsult a qualified financial professional before deploying live capital.","category":"page"},{"location":"#Contents","page":"Home","title":"Contents","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Pages = [\n    \"index.md\",\n    \"features.md\",\n    \"install.md\",\n    \"usage.md\",\n    \"indicators_support.md\",\n    \"usage_more.md\",\n    \"examples.md\",\n    \"internals.md\",\n    \"implementing_your_indic.md\",\n    \"api.md\",\n    \"projects.md\",\n]","category":"page"}]
}
